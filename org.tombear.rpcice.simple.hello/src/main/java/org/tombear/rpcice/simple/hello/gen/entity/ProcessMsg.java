// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `HelloApi.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package org.tombear.rpcice.simple.hello.gen.entity;

public class ProcessMsg extends com.zeroc.Ice.Value
{
    public ProcessMsg()
    {
        this.sessionId = "";
        this.s3Key = "";
        this.status = Cp4ccStatus.Cp4ccUnknown;
        this.fileType = Cp4ccFileType.Cp4ccERaw;
    }

    public ProcessMsg(String sessionId, String s3Key, Cp4ccStatus status, Cp4ccFileType fileType)
    {
        this.sessionId = sessionId;
        this.s3Key = s3Key;
        this.status = status;
        this.fileType = fileType;
    }

    protected String sessionId;

    public String getSessionId()
    {
        return sessionId;
    }

    public void setSessionId(String sessionId)
    {
        this.sessionId = sessionId;
    }

    protected String s3Key;

    public String getS3Key()
    {
        return s3Key;
    }

    public void setS3Key(String s3Key)
    {
        this.s3Key = s3Key;
    }

    protected Cp4ccStatus status;

    public Cp4ccStatus getStatus()
    {
        return status;
    }

    public void setStatus(Cp4ccStatus status)
    {
        this.status = status;
    }

    protected Cp4ccFileType fileType;

    public Cp4ccFileType getFileType()
    {
        return fileType;
    }

    public void setFileType(Cp4ccFileType fileType)
    {
        this.fileType = fileType;
    }

    public ProcessMsg clone()
    {
        return (ProcessMsg)super.clone();
    }

    public static String ice_staticId()
    {
        return "::gen::entity::ProcessMsg";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    public static final long serialVersionUID = -4115540301249043110L;

    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeString(sessionId);
        ostr_.writeString(s3Key);
        Cp4ccStatus.ice_write(ostr_, status);
        Cp4ccFileType.ice_write(ostr_, fileType);
        ostr_.endSlice();
    }

    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        sessionId = istr_.readString();
        s3Key = istr_.readString();
        status = Cp4ccStatus.ice_read(istr_);
        fileType = Cp4ccFileType.ice_read(istr_);
        istr_.endSlice();
    }
}
